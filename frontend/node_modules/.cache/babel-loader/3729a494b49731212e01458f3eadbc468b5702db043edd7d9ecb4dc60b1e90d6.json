{"ast":null,"code":"var _jsxFileName = \"D:\\\\h\\u1ECDc k\\xEC 2 n\\u0103m 4\\\\LTweb\\\\basicNodeJSexercise\\\\frontend\\\\src\\\\PostLists.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./styles.css\";\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PostLists() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [count, setCount] = useState(5);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/api/posts?limit=${count}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(\"An error occurred while fetching the data.\");\n        setLoading(false);\n      }\n    };\n    fetchData(count);\n  }, [count]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: count,\n        onChange: e => {\n          setCount(Number(e.target.value));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 2,\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(d => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/posts/${d.slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: d.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, d.slug, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PostLists, \"XUyX//1aEpsE2kn7yEOD6cg3uaQ=\");\n_c = PostLists;\nvar _c;\n$RefreshReg$(_c, \"PostLists\");","map":{"version":3,"names":["React","Link","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PostLists","_s","data","setData","loading","setLoading","error","setError","count","setCount","fetchData","response","fetch","ok","Error","status","result","json","console","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","map","d","to","slug","title","_c","$RefreshReg$"],"sources":["D:/học kì 2 năm 4/LTweb/basicNodeJSexercise/frontend/src/PostLists.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function PostLists() {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [count, setCount] = useState(5);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/api/posts?limit=${count}`);\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! Status: ${response.status}`);}\r\n            const result = await response.json();\r\n            setData(result);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error(\"Error fetching data:\", error);\r\n            setError(\"An error occurred while fetching the data.\");\r\n            setLoading(false);\r\n        }\r\n        };\r\n        fetchData(count);\r\n    }, [count]);\r\n    \r\n    if (loading) return <p>Loading posts...</p>;\r\n    if (error) return <p>{error}</p>;\r\n    return (\r\n        <>\r\n            <div>\r\n                <select\r\n                value={count}\r\n                onChange={(e) => {\r\n                    setCount(Number(e.target.value));\r\n                }}>\r\n                    <option value={1}>1</option>\r\n                    <option value={2}>2</option>\r\n                </select>\r\n            </div>\r\n            <ul>\r\n            {data.map((d) => (\r\n                <li key={d.slug}>\r\n                    <Link to={`/posts/${d.slug}`}>\r\n                        <h3>{d.title}</h3>\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}